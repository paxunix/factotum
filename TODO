- now that omnibox suggestions' content gets the --guid=n appended to it,
  you can have a situation where the user selects one, but then starts
  typing afer the --guid=n value.  Accepting this modified command line will
  invoke the exact match of the keyword, rather than what is specified by
  the guid.  This will be surprising to users.

- can use chrome.alarms to schedule Fcommand update checks

- maybe Fcommand should also have a method to build a request to the
  content script?

- might be useful to have a method to log a message to the collected set of
  errors, etc. saved in the bg page.  Something like console.log, but it
  sends a message to bg and saves the message.  Could then use the same
  mechanism for all errors, warnings, notifications, etc.

- investigate how to catch and surface errors when an Fcommand does
  something forbidden by the active page's CSP.
    - should provide mechanism to override CSP by intercepting requests?

- record all errors passed back to bg from Fcommands and present them from a
  menu option
    - use a ring buffer?

- would be cool to flag an fcommand as taking no parameters and being able
  to be run from the context menu.  Then we can populate the context menu
  with those Fcommands and when you click one, it runs it as if you had
  typed its name in the omnibox

- could just use the chrome filesystem sync api to store the factotum
  commands on the user's google drive and then make them available in all
  clients
    - should be able to toggle which ones you want sync'd and which you
      don't (so you can have a set of scripts just for work that aren't
      sync'd to your home account)?  Or just handle this via chrome profiles?

- what if you have more of the same Fcommand names than will fit in
  the omnibox dropdown?

- provide a management interface on the options page just for F commands
    - shows a list of commands
    - support enabling/disabling F commands
    - support enable/disable of individual aliases for Fcommands???
        - useful if you have an Fcommand that supplies an alias you don't
          want because it's supplied by a different Fcommand
    - editing commands
    - exporting commands

- support commands from non-local sources
    - e.g. specifying a URL will pull the Fcommand from the URL and use it.
        - need to specify the data format.
    - can these be edited locally???
        - do we store a diff so you could apply a patch if the Fcommand were
          updated and you wanted to keep your changes?

- should supply handy notification icons so bg code can easily pop a
  notification using standard icons included in the extension (then there's
  no cross-origin issues).  Makes sense to expose the internal URLs, since
  the extension will need them anyway.

- maybe a hotkey that doesn't use the omnibox at all; but then you basically
  build your own omnibox functionality in a popup.  Then you can put
  whatever you want in it.  With polymer, a lot of the functionality of a
  nice look-and-feel might be "free".
    - not sure how that would affect the notion of the "current tab" in
      which the Fcommand would execute.
    - it would mean there would always be a window, so that an Fcommand
      could execute regardless of whether it was bg or page context but the
      user happened to be on an internal page
    - Ubiquity used to be invoked this way (Ctrl-Space)

